package ru.rti.inform.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import ru.rti.inform.entity.Person;
import ru.rti.inform.repository.PersonRepository;

import java.util.ArrayList;
import java.util.List;

@Controller    // This means that this class is a controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
     // This means to get the bean called personRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    @Autowired
    private PersonRepository personRepository;

//    @Autowired
//    private PbdPersonRepository pbdPersonRepository;

//    @GetMapping(path="/add") // Map ONLY GET Requests
//    public @ResponseBody
//    String addNewUser (@RequestParam String lastName, @RequestParam String firstName, @RequestParam String email) {
//        // @ResponseBody means the returned String is the response, not a view name
//        // @RequestParam means it is a parameter from the GET or POST request
//        Person n = new Person();
//        n.setLastName(lastName);
//        n.setFirstName(firstName);
//        n.setEmail(email);
//        personRepository.save(n);
//        return "Saved";
//    }

    @GetMapping(path="")
    public String getAllPersons(Model model) {
        // This returns a JSON or XML with the users
        List<Person> target = new ArrayList<>();
        personRepository.findAll().forEach(target::add);
        model.addAttribute("list", target);
        return "index";
    }

//    @GetMapping(path="/pbd")
//    public @ResponseBody Iterable<PbdPerson> getAllPbdUsers() {
//        // This returns a JSON or XML with the users
//        return pbdPersonRepository.findAll();
//    }
}